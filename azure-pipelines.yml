# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# trigger:
# - master

# pool:
#   vmImage: ubuntu-latest

# steps:
# - script: echo Hello, world!
#   displayName: 'Run a one-line script'

# - script: |
#     echo Add other tasks to build, test, and deploy your project.
#     echo See https://aka.ms/yaml
#   displayName: 'Run a multi-line script'



trigger:
- main

stages:
# ========== Stage 1: Build & Push Docker 镜像 ==========
- stage: Build
  displayName: 'Build and Push Docker Image'
  jobs:
  - job: BuildJob
    pool:
      name: Azure Pipelines
      demands: maven
    steps:
    - task: Maven@3
      displayName: 'Build with Maven'

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(system.defaultworkingdirectory)'
        Contents: '**/*.jar'
        TargetFolder: '$(build.artifactstagingdirectory)'

    - task: Docker@2
      displayName: 'Build and Push Docker Image'
      inputs:
        containerRegistry: 'dockerhub-test'
        repository: 'raypick/rbhpoc-qmm-backend'
        Dockerfile: '**/Dockerfile-prod'
        tags: |
          $(Build.BuildId)

# ========== Stage 2: 部署容器到自托管 Agent ==========
- stage: Deploy
  displayName: 'Deploy to ECS Agent'
  dependsOn: Build
  jobs:
  - job: DeployJob
    pool:
      name: ecs-agent-pool-rbhpoc-ali-prod
      demands:
        - agent.name -equals ecs-rbhpoc-eol-test-hz
    steps:
    - checkout: none

    - script: |
        docker stop getsign || true
        docker rm getsign || true
        docker run -d --name getsign raypick/rbhpoc-qmm-backend:$(Build.BuildId)
      displayName: 'Run latest docker container'

